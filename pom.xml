<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ogr.user12043</groupId>
  <artifactId>kanban12043</artifactId>
  <version>1.0-beta3</version>

  <name>kanban12043</name>
  <!--<url>http://www.example.com</url>-->

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.main-class>ogr.user12043.kanban12043.Main</project.main-class>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <maven-jar-plugin.version>3.1.0</maven-jar-plugin.version>
    <maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>
    <maven-dependency-plugin.version>3.1.0</maven-dependency-plugin.version>
    <json-version>20210307</json-version>
    <spring-version>5.3.8</spring-version>
    <spring-data-jpa-version>2.5.1</spring-data-jpa-version>
    <hibernate-version>5.5.0.Final</hibernate-version>
    <log4j-version>2.15.0</log4j-version>
    <h2database-version>1.4.200</h2database-version>
    <lib-folder>lib</lib-folder>
  </properties>

  <dependencies>
    <!--<dependency>-->
    <!--<groupId>junit</groupId>-->
    <!--<artifactId>junit</artifactId>-->
    <!--<version>4.11</version>-->
    <!--<scope>test</scope>-->
    <!--</dependency>-->

    <!--=========================================JSON=========================================-->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${json-version}</version>
    </dependency>

    <!--=========================================LOGGING=========================================-->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j-version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j-version}</version>
    </dependency>

    <!--=========================================SPRING=========================================-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring-version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring-version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-jpa</artifactId>
      <version>${spring-data-jpa-version}</version>
    </dependency>

    <!--=========================================HIBERNATE=========================================-->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate-version}</version>
    </dependency>

    <!--=========================================DATABASE=========================================-->
    <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2database-version}</version>
    </dependency>


    <!--=========================================THEMES=========================================-->
    <!-- https://mvnrepository.com/artifact/com.seaglasslookandfeel/seaglasslookandfeel -->
    <dependency>
      <groupId>com.seaglasslookandfeel</groupId>
      <artifactId>seaglasslookandfeel</artifactId>
      <version>0.2.1</version>
    </dependency>

    <!--=========================================GUI COMPONENT=========================================-->
    <!-- https://mvnrepository.com/artifact/com.github.lgooddatepicker/LGoodDatePicker -->
    <dependency>
      <groupId>com.github.lgooddatepicker</groupId>
      <artifactId>LGoodDatePicker</artifactId>
      <version>11.2.1</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <!--Jar file include dependencies-->
      <!--<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>${project.main-class}</mainClass>
                </manifest>
                <manifestEntries></manifestEntries>
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
        </executions>
      </plugin>-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <!--Copy dependencies to lib folder-->
              <outputDirectory>${project.build.directory}/${lib-folder}</outputDirectory>
              <!--If this line was active instead of above, dependencies will be in output jar file-->
              <!--<outputDirectory>${project.build.outputDirectory}/${lib-folder}</outputDirectory>-->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>${project.main-class}</mainClass>
              <!--Add classpath to find dependencies-->
              <addClasspath>true</addClasspath>
              <classpathPrefix>${lib-folder}/</classpathPrefix>
            </manifest>
            <!--<manifestEntries>
              <Class-Path>${lib-folder}/darcula-1.0.jar ${lib-folder}/weblaf-1.28.jar</Class-Path>
            </manifestEntries>-->
          </archive>
        </configuration>
      </plugin>
    </plugins>

    <!--<resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
        <targetPath>${project.build.outputDirectory}</targetPath>
        <includes>
          <include>**</include>
        </includes>
      </resource>
      <resource>
        <directory>${project.basedir}/lang</directory>
        <targetPath>${project.build.directory}/lang</targetPath>
        <includes>
          <include>*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>${project.basedir}/resources</directory>
        <targetPath>${project.build.directory}/resources</targetPath>
        <includes>
          <include>*.png</include>
          <include>*.wav</include>
        </includes>
      </resource>
    </resources>-->

    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
